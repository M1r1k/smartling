<?php

/**
 * @file
 * Tests for smartling
 */
class SmartlingNodeUploadTest extends SmartlingWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Content - Upload content. Upload single node from Edit form.',
      'description' => 'Test success flow of upload from Edit form.',
      'group' => 'Smartling'
    );
  }

  public function testCorrectNodeUpload() {
    // Add one random node page type
    $this->smartlingCreateNode();

    // Add predefined languages.
    $this->smartlingAddSiteLanguage('zh-hans');

    // Set correct account settings
    $this->smartlingSetCorrectSettings();

    // Set nodes method for page CT
    $edit = array();
    $edit['page_TT_page'] = 2;
    $this->drupalPost('admin/config/regional/smartling', $edit, t('Save'), array(), array(), 'smartling-admin-node-translation-settings-form');
    $this->assertText(t('Your content types have been updated.'));

    // Set title field for article CT
    $edit = array();
    $edit['page_SEPARATOR_node_title'] = 1;
    $this->drupalPost('admin/config/regional/smartling', $edit, t('Save'), array(), array(), 'smartling-admin-node-translation-settings-form');
    $this->assertText(t('Your content types have been updated.'));

    // Send node to smartling
    $edit = array(
      "target[ru]" => 'ru',
    );
    $this->drupalPost('node/1/edit', $edit, t('Send to Smartling'));
    $this->assertText(t('The node "@title" has been sent to Smartling for translation to "@langs".', array('@title' => $this->random_node_title, '@langs' => 'ru')));

    $queue = db_select('queue', 'q')
        ->fields('q', array('data'))
        ->condition('q.name', 'smartling_upload', '=')
        ->execute()
        ->fetchObject();
    if (empty($queue)) {
      $this->error('Queue smartling_upload is empty.');
    }
    else {
      $data = unserialize($queue->data);
      $this->verbose(print_r($data, TRUE));

      $this->assertEqual($data->rid, 1);
    }
  }

}
