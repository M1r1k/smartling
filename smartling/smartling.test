<?php

/**
 * @file
 * Tests for smartling.module.
 */
class SmartlingSettingsSaveTest extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Smartling account settings save',
      'description' => 'Test Smartling account settings save',
      'group' => 'Smartling'
    );
  }

  public function setUp() {

    // Enable Smartling module
    parent::setUp('smartling');

    // Create a user with access
    $this->privileged_user = $this->drupalCreateUser(array(
      'administer smartling',
    ));

    // Authorizing user
    $this->drupalLogin($this->privileged_user);
  }

  public function testCorrectSmartlingAccountSettings() {
    $edit = array();
    $edit['project_id'] = '1295c174d';
    $edit['smartling_key'] = '5d75ab84-f189-43e0-be79-153d6c220dde';
    $this->drupalPost('admin/config/regional/smartling', $edit, t('Save'), array(), array(), 'smartling-admin-account-info-settings-form');
    $this->assertText(t('Account settings saved.'));
  }

  public function testIncorrectSmartlingAccountSettings() {
    $edit = array();
    $edit['project_id'] = $this->randomName(9);
    $edit['smartling_key'] = $this->randomName(36);
    $this->drupalPost('admin/config/regional/smartling', $edit, t('Save'), array(), array(), 'smartling-admin-account-info-settings-form');
    $this->assertText(t('Please enter correct Smartling settings.'));
  }

}

class SmartlingBulkSubmitTest extends DrupalWebTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Smartling Bulk Submit',
      'description' => 'Test Smartling Bulk Submit',
      'group' => 'Smartling'
    );
  }

  public function setUp() {

    // Enable Smartling module
    parent::setUp('smartling');

    // Create a user with access
    $this->privileged_user = $this->drupalCreateUser(array(
      'administer smartling',
      'administer languages',
      'access administration pages'
    ));

    // Authorizing user
    $this->drupalLogin($this->privileged_user);
    // Create initial node.
    $body = $this->randomName(5);
    for ($i = 0; $i < 50; $i++) {
      $body .= ' ' . $this->randomName(rand(3, 8));
    }

    $settings = array(
      'body' => array('en' => array(array('value' => $body))),
      'title' => $this->randomName(8),
      'comment' => 0,
      'changed' => REQUEST_TIME,
      'moderate' => 0,
      'promote' => 0,
      'revision' => 1,
      'log' => '',
      'status' => 1,
      'sticky' => 0,
      'type' => 'article',
      'revisions' => NULL,
      'language' => 'en',
    );
    $this->drupalCreateNode($settings);
  }

  public function testBulkSubmit() {

    // Add predefined language.
    $edit = array(
      'langcode' => 'ru',
    );
    $this->drupalPost('admin/config/regional/language/add', $edit, t('Add language'));
    $this->assertText('ru', 'Language added successfully.');

    $this->drupalGet('admin/content/smartling-content');
    $edit = array(
      "views_bulk_operations[0]" => 1,
    );
    $this->drupalPost('admin/content/smartling-content', $edit, t('Translate'));

    $edit = array(
      "languages[ru]" => 'ru',
    );
    $this->drupalPost(NULL, $edit, t('Next'));
    $this->assertText(t('Performed Translate on 1 item.'));
  }

}
