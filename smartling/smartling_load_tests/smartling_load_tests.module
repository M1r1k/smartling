<?php

/**
 * @file
 * Code for the Smartling load tests feature.
 */
include_once 'smartling_load_tests.features.inc';

/**
 * Implements template_preprocess_page().
 */
function smartling_load_tests_preprocess_page(&$variables) {
  if (isset($variables['page']['content']['system_main']['smartling'])) {
    $smartling = $variables['page']['content']['system_main']['smartling'];
    if (isset($smartling['#type']) && $smartling['#type'] == 'vertical_tabs') {
      $smartling[4]['#title'] = 'Develop settings';
    }
    $variables['page']['content']['system_main']['smartling'] = $smartling;
  }
}

/**
 * Implements hook_form_alter().
 */
function smartling_load_tests_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'smartling_admin_mass_settings_form') {
    $query = db_select('node', 'n');
    $query->addExpression('COUNT(n.nid)');
    $count = $query->condition('n.type', 'smartling_load_test')
        ->execute()
        ->fetchCol();
    $count = $count[0];

    $form['dev_info']['load_tests'] = array(
      '#type' => 'item',
      '#title' => t('Load tests'),
      '#markup' => 'Nodes count: ' . $count,
    );
    $form['dev_info']['load_tests_submit'] = array(
      '#type' => 'submit',
      '#name' => 'load_tests_submit',
      '#value' => t('Generate 10K nodes'),
    );
    $form['dev_info']['cleanup_load_tests_submit'] = array(
      '#type' => 'submit',
      '#name' => 'cleanup_load_tests_submit',
      '#value' => t('CleanUp test nodes'),
    );
    $form['#submit'][] = 'smartling_admin_dev_settings_form_submit';
  }
}

function smartling_admin_dev_settings_form_submit($form, &$form_state) {
  if ($form_state['clicked_button']['#name'] == 'load_tests_submit') {
    for ($i = 0; $i < 5; $i++) {
      $operations[] = array('_create_load_test_node_batch', array());
    }
    $batch = array(
      'title' => t('Create Smartling load-tests content'),
      'operations' => $operations
    );
    batch_set($batch);
  }
  if ($form_state['clicked_button']['#name'] == 'cleanup_load_tests_submit') {
    $query = db_select('node', 'n');
    $result = $query->condition('n.type', 'smartling_load_test')
        ->fields('n', array('nid'))
        ->execute()
        ->fetchCol();
    if (!empty($result)) {
      foreach ($result as $nid) {
        $operations[] = array('_delete_load_test_node_batch', array($nid));
      }

      $batch = array(
        'title' => t('Delete Smartling load-tests content'),
        'operations' => $operations
      );
      batch_set($batch);
    }
  }
}

function _create_load_test_node_batch() {
  module_load_include('inc', 'devel_generate', 'devel_generate');
  global $user;

  $lang = language_default();

  $node = new stdClass();
  $node->type = 'smartling_load_test';
  node_object_prepare($node);
  $node->title = devel_create_greeking(mt_rand(2, 5), TRUE);
  $node->language = $lang->language;
  $node->uid = $user->uid;
  $node->status = 1;
  $node->created = REQUEST_TIME - mt_rand(0, 604800);

  // Populate all core fields on behalf of field.module
  module_load_include('inc', 'devel_generate', 'devel_generate.fields');
  devel_generate_fields($node, 'node', $node->type);

  node_save($node);
}

function _delete_load_test_node_batch($nid) {
  node_delete($nid);
}
