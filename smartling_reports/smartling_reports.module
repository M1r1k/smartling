<?php

/**
 * @file
 * Code for the Smartling reports feature.
 */

include_once 'smartling_reports.features.inc';

/**
 * Implements hook_menu().
 */
function smartling_reports_menu() {
  $items = array();

  $items['admin/content/smartling'] = array(
    'title' => 'Submissions',
    'description' => 'Submissions',
    'weight' => 101,
    'access arguments' => array('administer smartling'),
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/content/smartling-content'] = array(
    'title' => 'Smartling Bulk Submit',
    'description' => 'Smartling Bulk Submit',
    'weight' => 100,
    'access arguments' => array('administer smartling'),
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_menu_alter().
 */
function smartling_reports_menu_alter(&$items) {
  if (!empty($items['admin/content/smartling/report-completed'])) {
    $items['admin/content/smartling']['page callback'] = $items['admin/content/smartling/report-completed']['page callback'];
    $items['admin/content/smartling']['page arguments'] = $items['admin/content/smartling/report-completed']['page arguments'];
    $items['admin/content/smartling']['load arguments'] = $items['admin/content/smartling/report-completed']['load arguments'];
    $items['admin/content/smartling/report-completed']['type'] = MENU_DEFAULT_LOCAL_TASK;
  }

  if (!empty($items['admin/content/smartling-content/node'])) {
    $items['admin/content/smartling-content']['page callback'] = $items['admin/content/smartling-content/node']['page callback'];
    $items['admin/content/smartling-content']['page arguments'] = $items['admin/content/smartling-content/node']['page arguments'];
    $items['admin/content/smartling-content']['load arguments'] = $items['admin/content/smartling-content/node']['load arguments'];
    $items['admin/content/smartling-content/node']['type'] = MENU_DEFAULT_LOCAL_TASK;
  }
}

/**
 * Implements hook_views_query_alter().
 */
function smartling_reports_views_query_alter(&$view, &$query) {
  // Add relationships info for node.
  if ($view->name == 'smartling_bulk_submit') {
    $query->table_queue['smartling_entity_data_node']['join']->extra = array(
      array(
        'field' => 'entity_type',
        'value' => 'node',
      ),
    );
  }
  // Exclude und language and add relationships info for term.
  if ($view->name == 'smartling_bulk_submit_taxonomy_terms') {
    $query->where[] = array(
      'conditions' => array(
        array(
          'field' => 'taxonomy_term_data.language',
          'value' => array('und'),
          'operator' => '<>',
        ),
      ),
      'args' => array(),
      'type' => 'AND',
    );
    $query->where[] = array(
      'conditions' => array(
        array(
          'field' => 'taxonomy_term_data.language',
          'value' => array(language_default()->language),
          'operator' => '=',
        ),
      ),
      'args' => array(),
      'type' => 'AND',
    );
    $query->table_queue['smartling_entity_data_taxonomy_term_data']['join']->extra = array(
      array(
        'field' => 'entity_type',
        'value' => 'taxonomy_term',
      ),
    );
  }
  // Add relationships info for comment.
  if ($view->name == 'smartling_bulk_submit_comments') {
    $query->table_queue['smartling_entity_data_comment']['join']->extra = array(
      array(
        'field' => 'entity_type',
        'value' => 'comment',
      ),
    );
  }
  // Add relationships info for user.
  if ($view->name == 'smartling_bulk_submit_users') {
    $query->table_queue['smartling_entity_data_users']['join']->extra = array(
      array(
        'field' => 'entity_type',
        'value' => 'user',
      ),
    );
  }
}

/**
 * Add smartling css file in report.
 *
 * @param array $vars
 *   Vars.
 *
 * @return null
 *   Return if view name != smartling_submissions.
 */
function smartling_reports_preprocess_views_view_table(array &$vars) {
  if ($vars['view']->name != 'smartling_submissions') {
    return NULL;
  }

  $rows = $vars['view']->result;
  if (!empty($rows) && is_array($rows)) {
    $add_css = FALSE;
    foreach ($rows as $k => $v) {
      if (isset($v->smartling_entity_data_status) && ($v->smartling_entity_data_status == SMARTLING_STATUS_FAILED)) {
        $vars['row_classes'][$k][] = 'failed_status';
        $add_css = TRUE;
      }
    }
    if ($add_css) {
      drupal_add_css(drupal_get_path('module', 'smartling') . '/css/smartling_admin.css');
    }
  }
}
